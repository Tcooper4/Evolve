[
    {
        "name": "RSI Mean Reversion",
        "description": "Mean reversion strategy using RSI oscillator",
        "category": "technical",
        "parameters": {
            "period": 14,
            "oversold": 30,
            "overbought": 70,
            "stop_loss": 0.02,
            "take_profit": 0.05
        },
        "required_data": ["price", "volume"],
        "output_type": "signal",
        "confidence_available": true,
        "benchmark_support": true
    },
    {
        "name": "Bollinger Bands",
        "description": "Mean reversion strategy using Bollinger Bands",
        "category": "technical",
        "parameters": {
            "period": 20,
            "std_dev": 2.0,
            "stop_loss": 0.02,
            "take_profit": 0.05
        },
        "required_data": ["price", "volume"],
        "output_type": "signal",
        "confidence_available": true,
        "benchmark_support": true
    },
    {
        "name": "Moving Average Crossover",
        "description": "Trend following strategy using moving average crossovers",
        "category": "technical",
        "parameters": {
            "fast_period": 10,
            "slow_period": 30,
            "stop_loss": 0.03,
            "take_profit": 0.08
        },
        "required_data": ["price", "volume"],
        "output_type": "signal",
        "confidence_available": true,
        "benchmark_support": true
    },
    {
        "name": "MACD Strategy",
        "description": "Trend following strategy using MACD indicator",
        "category": "technical",
        "parameters": {
            "fast_period": 12,
            "slow_period": 26,
            "signal_period": 9,
            "stop_loss": 0.025,
            "take_profit": 0.06
        },
        "required_data": ["price", "volume"],
        "output_type": "signal",
        "confidence_available": true,
        "benchmark_support": true
    },
    {
        "name": "GARCH Volatility",
        "description": "Volatility-based strategy using GARCH model",
        "category": "statistical",
        "parameters": {
            "p_order": 1,
            "q_order": 1,
            "vol_window": 20,
            "threshold": 0.05,
            "stop_loss": 0.02,
            "take_profit": 0.04
        },
        "required_data": ["price", "volume", "returns"],
        "output_type": "signal",
        "confidence_available": true,
        "benchmark_support": true
    },
    {
        "name": "Ridge Regression",
        "description": "Machine learning strategy using Ridge regression",
        "category": "ml",
        "parameters": {
            "alpha": 1.0,
            "lookback": 30,
            "prediction_horizon": 5,
            "confidence_level": 0.95,
            "stop_loss": 0.025,
            "take_profit": 0.06
        },
        "required_data": ["price", "volume", "technical_indicators"],
        "output_type": "forecast",
        "confidence_available": true,
        "benchmark_support": true
    },
    {
        "name": "Informer Model",
        "description": "Deep learning strategy using Informer transformer",
        "category": "deep_learning",
        "parameters": {
            "seq_len": 50,
            "label_len": 25,
            "pred_len": 10,
            "d_model": 128,
            "n_heads": 8,
            "e_layers": 2,
            "d_layers": 1,
            "d_ff": 512,
            "dropout": 0.1,
            "stop_loss": 0.03,
            "take_profit": 0.07
        },
        "required_data": ["price", "volume", "technical_indicators"],
        "output_type": "forecast",
        "confidence_available": true,
        "benchmark_support": true
    },
    {
        "name": "Transformer",
        "description": "Deep learning strategy using Transformer architecture",
        "category": "deep_learning",
        "parameters": {
            "d_model": 128,
            "n_heads": 8,
            "num_layers": 6,
            "d_ff": 512,
            "dropout": 0.1,
            "seq_len": 50,
            "pred_len": 10,
            "stop_loss": 0.025,
            "take_profit": 0.06
        },
        "required_data": ["price", "volume", "technical_indicators"],
        "output_type": "forecast",
        "confidence_available": true,
        "benchmark_support": true
    },
    {
        "name": "Autoformer",
        "description": "Deep learning strategy using Autoformer architecture",
        "category": "deep_learning",
        "parameters": {
            "seq_len": 50,
            "label_len": 25,
            "pred_len": 10,
            "d_model": 128,
            "n_heads": 8,
            "e_layers": 2,
            "d_layers": 1,
            "d_ff": 512,
            "factor": 5,
            "moving_avg": 25,
            "dropout": 0.1,
            "stop_loss": 0.03,
            "take_profit": 0.07
        },
        "required_data": ["price", "volume", "technical_indicators"],
        "output_type": "forecast",
        "confidence_available": true,
        "benchmark_support": true
    },
    {
        "name": "LSTM Strategy",
        "description": "Deep learning strategy using LSTM networks",
        "category": "deep_learning",
        "parameters": {
            "hidden_size": 64,
            "num_layers": 2,
            "dropout": 0.2,
            "seq_len": 30,
            "pred_len": 5,
            "stop_loss": 0.025,
            "take_profit": 0.06
        },
        "required_data": ["price", "volume", "technical_indicators"],
        "output_type": "forecast",
        "confidence_available": true,
        "benchmark_support": true
    },
    {
        "name": "XGBoost Strategy",
        "description": "Machine learning strategy using XGBoost",
        "category": "ml",
        "parameters": {
            "n_estimators": 100,
            "max_depth": 6,
            "learning_rate": 0.1,
            "lookback": 20,
            "prediction_horizon": 3,
            "stop_loss": 0.02,
            "take_profit": 0.05
        },
        "required_data": ["price", "volume", "technical_indicators"],
        "output_type": "forecast",
        "confidence_available": true,
        "benchmark_support": true
    },
    {
        "name": "Ensemble Strategy",
        "description": "Combined strategy using multiple models",
        "category": "ensemble",
        "parameters": {
            "models": ["LSTM", "XGBoost", "Transformer"],
            "weights": [0.4, 0.3, 0.3],
            "voting_method": "weighted",
            "stop_loss": 0.025,
            "take_profit": 0.06
        },
        "required_data": ["price", "volume", "technical_indicators"],
        "output_type": "ensemble",
        "confidence_available": true,
        "benchmark_support": true
    }
] 