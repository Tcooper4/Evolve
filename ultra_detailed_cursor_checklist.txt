
✅ Ultra-Detailed Cursor Checklist for Finalizing Evolve

GOAL: Fully Autonomous, Modular, Self-Improving Forecasting Tool

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1️⃣ FILE CLEANUP: Remove All Corrupt or Legacy Files
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
- Delete or sanitize files with \x00 null bytes:
  - evolve_final_cleanup_checklist.txt
  - trading/feature_engineering/utils.py
  - trading/memory/logger_utils.py
  - test_model_save/tcn_model.pt
  - backup/requirements/full_requirements.txt
  - deploy/Makefile
- Delete all __pycache__ folders and .pyc files
- Remove unused legacy folders unless explicitly needed

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2️⃣ BROKEN IMPORTS: Repair All Agent and Model Imports
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
- Ensure the following are defined and properly imported:
  - ModelImprovementRequest from model_improver_agent.py
  - GeneticOptimizer from core_optimizer.py
- Fix multi-imports in __init__.py files
- Run app.py and confirm all imports resolve

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
3️⃣ AGENTIC MODULARITY: Enable Dynamic Model Creation
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
- Add ModelBuilderAgent (use AutoSklearn, TPOT, or GPT)
- Add ModelEvaluatorAgent (MSE, Sharpe, return, drawdown)
- Add PerformanceCriticAgent (triggers model rebuild)
- Log all decisions to agent logs

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
4️⃣ STRATEGY AGENT OVERHAUL
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
- Audit StrategySwitcher and StrategySelectorAgent
- Add StrategySynthesizerAgent (can mix RSI, MACD, etc.)
- Each strategy must log:
  - buy/sell signals
  - indicators used
  - tuned parameters

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
5️⃣ UI / UX UPGRADE: Clean, Condense, and Polish
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
- Home: prompt triggers full pipeline (forecast > strategy > backtest)
- Sidebar:
  - Replace emoji
  - Group pages under dropdown/tab
  - Hide dev pages behind flag
- Layout:
  - Tooltips for all UI elements
  - Use columns for spacing
  - Add breadcrumbs for clarity

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
6️⃣ ERROR RECOVERY + LOGGING
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
- Add try/except blocks in every major function
- Log all errors to logs/errors.log
- Retry failed model/strategy calls
- Show fallback user-friendly messages

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
7️⃣ TEST CASES + FINAL PASS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
- Test with AAPL, TSLA, ETH-USD
- Toggle all strategies and models
- Validate slider edge cases
- Test full prompt-to-report workflow

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📦 Final Result
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
- ChatGPT-like UI
- Agentic self-improvement
- Full error handling
- Prompt-based forecasting + report generation
